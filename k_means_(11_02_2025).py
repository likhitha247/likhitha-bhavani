# -*- coding: utf-8 -*-
"""K-MEANS (11-02/2025)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I5N3L5H-MYAUWOOe3_TXPyROX3gHgwHk
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings("ignore")
from sklearn.cluster import KMeans

"""# Clustering-Divide the universities in to group"""

univ = pd.read_csv("/home/Universities (1).csv")
univ

univ.info()

univ.describe()

univ.isnull().sum()

"""# standardisation function"""

#Read all numeric columns in to univ1
univ1 = univ.iloc[:,1:]

univ1

cols = univ1.columns

# Standardisation function
from sklearn. preprocessing import StandardScaler
scaler = StandardScaler()
scaled_univ_df = pd. DataFrame(scaler.fit_transform(univ1), columns = cols )
scaled_univ_df

from sklearn.cluster import KMeans
clusters_new = KMeans(3, random_state=0)
clusters_new.fit(scaled_univ_df)

clusters_new.labels_

set(clusters_new.labels_)

#assign clusters to the Univ data set
univ['clusterid_new'] = clusters_new.labels_

univ

univ.sort_values('clusterid_new')

#use groupby() to find aggregated (mean) values in each cluster
univ.iloc[:,1:].groupby('clusterid_new').mean()

"""Observations:

* Custer 2 appears to be the top rated universities cluster as the cut off score, Top10, SFRatio parameter mean values are highest
* Cluster 1 appears to occupy the middle level rated universities
* Cluster 0 comes as the lower level rated universities
"""

univ[univ['clusterid_new']==0]

"""# finding optimal K value using elbow plot"""

wcss = []
for i in range(1, 20):
    kmeans = KMeans(n_clusters=i, random_state=0 )
    kmeans.fit(scaled_univ_df)
    #kmeans.fit(univ1)
    wcss.append(kmeans.inertia_)
print(wcss)
plt.plot(range(1, 20), wcss)
plt.title('Elbow Method' )
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

univ.info()